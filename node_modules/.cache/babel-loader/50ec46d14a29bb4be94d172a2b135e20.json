{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nexport function changeCategory(category) {\n  return {\n    type: actionTypes.CHANGE_CATEGORY,\n    payload: category\n  };\n}\nexport function getCategoriesSuccess(categories) {\n  return {\n    type: actionTypes.GET_CATEGORIES_SUCCESS,\n    payload: categories\n  };\n}\nexport function getCategories() {\n  return function (dispatch) {\n    let url = \"http://localhost:3000/categories\";\n    return axios.get(url).then(function (response) {\n      dispatch(getCategoriesSuccess(response.data));\n    }); //     return fetch(url)\n    //            .then(response => response.json())\n    //            .then(result => dispatch(getCategoriesSuccess(result)))\n  };\n}\nexport function createCategorySuccess(product) {\n  return {\n    type: actionTypes.CREATE_CATEGORIES_SUCCESS,\n    payload: product\n  };\n}\nexport function updateCategorySuccess(product) {\n  return {\n    type: actionTypes.UPDATE_CATEGORIES_SUCCESS,\n    payload: product\n  };\n}\nexport function saveCategoryApi(category) {\n  return fetch(\"http://localhost:3000/categories/\" + (category.id || \"\"), {\n    method: category.id ? \"PUT\" : \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(category)\n  }).then(result => handleresponse(result, false)).catch(handleError);\n}\nexport function saveCategory(category) {\n  return function (dispatch) {\n    return saveCategoryApi(category).then(savedCategory => {\n      category.id ? dispatch(updateCategorySuccess(savedCategory)) : dispatch(createCategorySuccess(savedCategory));\n    });\n  };\n}\nexport async function handleresponse(response, isDelete) {\n  if (response.ok) {\n    return isDelete ? true : response.json();\n  }\n\n  const error = await response.text();\n  throw new Error(error);\n}\nexport function handleError(error) {\n  console.error(\"Bir Hata Oluştu\" + error.text());\n  throw error;\n}\nexport function deleteCategoryApi(category) {\n  return fetch(\"http://localhost:3000/categories/\" + category.id, {\n    method: \"DELETE\",\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).then(result => handleresponse(result, true)).catch(handleError);\n}\nexport function deleteCategorySuccess(state) {\n  return {\n    type: actionTypes.REMOVE_CATEGORIES_SUCCESS,\n    payload: state\n  };\n}\nexport function deleteCategory(category) {\n  return function (dispatch) {\n    return deleteCategoryApi(category).then(result => dispatch(deleteCategorySuccess(result)));\n  };\n}","map":{"version":3,"sources":["C:/reactcourse/nortwind-redux-master2/src/redux/actions/categoryActions.js"],"names":["axios","actionTypes","changeCategory","category","type","CHANGE_CATEGORY","payload","getCategoriesSuccess","categories","GET_CATEGORIES_SUCCESS","getCategories","dispatch","url","get","then","response","data","createCategorySuccess","product","CREATE_CATEGORIES_SUCCESS","updateCategorySuccess","UPDATE_CATEGORIES_SUCCESS","saveCategoryApi","fetch","id","method","headers","body","JSON","stringify","result","handleresponse","catch","handleError","saveCategory","savedCategory","isDelete","ok","json","error","text","Error","console","deleteCategoryApi","deleteCategorySuccess","state","REMOVE_CATEGORIES_SUCCESS","deleteCategory"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\"\r\n\r\nexport function changeCategory(category) {\r\n    return {\r\n        type: actionTypes.CHANGE_CATEGORY,\r\n        payload: category\r\n    }\r\n}\r\n\r\nexport function getCategoriesSuccess(categories)\r\n{\r\n    return {\r\n        type: actionTypes.GET_CATEGORIES_SUCCESS,\r\n        payload: categories\r\n    }\r\n}\r\n\r\n\r\nexport function getCategories() {\r\n    return function (dispatch) {\r\n        let url = \"http://localhost:3000/categories\";\r\n     \r\n        return axios.get(url).then(function(response){\r\n            dispatch(getCategoriesSuccess(response.data))\r\n        });\r\n\r\n   //     return fetch(url)\r\n   //            .then(response => response.json())\r\n   //            .then(result => dispatch(getCategoriesSuccess(result)))\r\n    }\r\n}\r\n\r\nexport function createCategorySuccess(product)\r\n{\r\n    return {type:actionTypes.CREATE_CATEGORIES_SUCCESS,payload: product}\r\n}\r\n\r\nexport function updateCategorySuccess(product)\r\n{\r\n    return {type:actionTypes.UPDATE_CATEGORIES_SUCCESS,payload: product}\r\n}\r\n\r\n\r\nexport function saveCategoryApi(category)\r\n{\r\n    return fetch(\"http://localhost:3000/categories/\" + (category.id || \"\"),{\r\n        method:category.id ? \"PUT\":\"POST\",\r\n        headers:{\"content-type\":\"application/json\"},\r\n        body: JSON.stringify(category)\r\n    }).then(result => handleresponse(result,false))\r\n      .catch(handleError)\r\n}\r\n\r\nexport function saveCategory(category)\r\n{\r\n    return function(dispatch) {\r\n        return saveCategoryApi(category).then(savedCategory=>{\r\n            category.id ? dispatch(updateCategorySuccess(savedCategory)) : \r\n                          dispatch(createCategorySuccess(savedCategory))\r\n        })\r\n    }\r\n}\r\n\r\nexport async function handleresponse(response,isDelete)\r\n{\r\n    if(response.ok)\r\n    {\r\n        return isDelete ? true : response.json();\r\n    }\r\n\r\n    const error =  await response.text();\r\n    throw new Error(error);\r\n}\r\n\r\nexport function handleError(error)\r\n{\r\n    console.error(\"Bir Hata Oluştu\"+ error.text());\r\n    throw error;\r\n}\r\n\r\nexport function deleteCategoryApi(category)\r\n{\r\n    return fetch(\"http://localhost:3000/categories/\" + (category.id ),{\r\n        method: \"DELETE\",\r\n        headers:{\"content-type\":\"application/json\"}\r\n    }).then(result => handleresponse(result,true))\r\n      .catch(handleError)\r\n}\r\n\r\nexport function deleteCategorySuccess(state)\r\n{\r\n    return {type:actionTypes.REMOVE_CATEGORIES_SUCCESS,payload: state}\r\n}\r\n\r\nexport function deleteCategory(category)\r\n{\r\n    return function(dispatch) {\r\n        return deleteCategoryApi(category).then(result => dispatch(deleteCategorySuccess(result)))   \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}