{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nexport function changeCategory(category) {\n  return {\n    type: actionTypes.CHANGE_CATEGORY,\n    payload: category\n  };\n}\nexport function getCategoriesSuccess(categories) {\n  return {\n    type: actionTypes.GET_CATEGORIES_SUCCESS,\n    payload: categories\n  };\n}\nexport function getCategories() {\n  return function (dispatch) {\n    let url = \"http://localhost:3000/categories\";\n    return fetch(url).then(response => response.json()).then(result => dispatch(getCategoriesSuccess(result)));\n  };\n}\nexport function createCategorySuccess(product) {\n  return {\n    type: actionTypes.CREATE_CATEGORIES_SUCCESS,\n    payload: product\n  };\n}\nexport function updateCategorySuccess(product) {\n  return {\n    type: actionTypes.UPDATE_CATEGORIES_SUCCESS,\n    payload: product\n  };\n}\nexport function saveCategoryApi(category) {\n  return fetch(\"http://localhost:3000/categories/\" + (category.id || \"\"), {\n    method: category.id ? \"PUT\" : \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(category)\n  }).then(handleresponse).catch(handleError);\n}\nexport function saveCategory(category) {\n  return function (dispatch) {\n    return saveCategoryApi(category).then(savedCategory => {\n      category.id ? dispatch(updateCategorySuccess(savedCategory)) : dispatch(createCategorySuccess(savedCategory));\n    });\n  };\n}\nexport async function handleresponse(response) {\n  if (response.ok) {\n    return response.json();\n  }\n\n  const error = await response.text();\n  throw new Error(error);\n}\nexport function handleError(error) {\n  console.error(\"Bir Hata Oluştu\" + error.text());\n  throw error;\n}\nexport function deleteCategoryApi(category) {\n  return fetch(\"http://localhost:3000/products/\" + category.id, {\n    method: \"DELETE\",\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).then(handleResponseRemoved).catch(handleError);\n}","map":{"version":3,"sources":["C:/reactcourse/nortwind-redux-master2/src/redux/actions/categoryActions.js"],"names":["actionTypes","changeCategory","category","type","CHANGE_CATEGORY","payload","getCategoriesSuccess","categories","GET_CATEGORIES_SUCCESS","getCategories","dispatch","url","fetch","then","response","json","result","createCategorySuccess","product","CREATE_CATEGORIES_SUCCESS","updateCategorySuccess","UPDATE_CATEGORIES_SUCCESS","saveCategoryApi","id","method","headers","body","JSON","stringify","handleresponse","catch","handleError","saveCategory","savedCategory","ok","error","text","Error","console","deleteCategoryApi","handleResponseRemoved"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionTypes\"\n\nexport function changeCategory(category) {\n    return {\n        type: actionTypes.CHANGE_CATEGORY,\n        payload: category\n    }\n}\n\nexport function getCategoriesSuccess(categories)\n{\n    return {\n        type: actionTypes.GET_CATEGORIES_SUCCESS,\n        payload: categories\n    }\n}\n\n\nexport function getCategories() {\n    return function (dispatch) {\n        let url = \"http://localhost:3000/categories\";\n     \n        return fetch(url)\n               .then(response => response.json())\n               .then(result => dispatch(getCategoriesSuccess(result)))\n    }\n}\n\nexport function createCategorySuccess(product)\n{\n    return {type:actionTypes.CREATE_CATEGORIES_SUCCESS,payload: product}\n}\n\nexport function updateCategorySuccess(product)\n{\n    return {type:actionTypes.UPDATE_CATEGORIES_SUCCESS,payload: product}\n}\n\n\nexport function saveCategoryApi(category)\n{\n    return fetch(\"http://localhost:3000/categories/\" + (category.id || \"\"),{\n        method:category.id ? \"PUT\":\"POST\",\n        headers:{\"content-type\":\"application/json\"},\n        body: JSON.stringify(category)\n    }).then(handleresponse)\n      .catch(handleError)\n}\n\nexport function saveCategory(category)\n{\n    return function(dispatch) {\n        return saveCategoryApi(category).then(savedCategory=>{\n            category.id ? dispatch(updateCategorySuccess(savedCategory)) : \n                          dispatch(createCategorySuccess(savedCategory))\n        })\n    }\n}\n\nexport async function handleresponse(response)\n{\n    if(response.ok)\n    {\n        return response.json();\n    }\n\n    const error =  await response.text();\n    throw new Error(error);\n}\n\nexport function handleError(error)\n{\n    console.error(\"Bir Hata Oluştu\"+ error.text());\n    throw error;\n}\n\nexport function deleteCategoryApi(category)\n{\n    return fetch(\"http://localhost:3000/products/\" + (category.id ),{\n        method: \"DELETE\",\n        headers:{\"content-type\":\"application/json\"}\n    }).then(handleResponseRemoved)\n      .catch(handleError)\n}"]},"metadata":{},"sourceType":"module"}