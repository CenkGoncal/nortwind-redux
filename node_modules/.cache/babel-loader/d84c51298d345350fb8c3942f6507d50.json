{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nexport function changeCategory(category) {\n  return {\n    type: actionTypes.CHANGE_CATEGORY,\n    payload: category\n  };\n}\nexport function getCategoriesSuccess(categories) {\n  return {\n    type: actionTypes.GET_CATEGORIES_SUCCESS,\n    payload: categories\n  };\n}\nexport function getCategories() {\n  return function (dispatch) {\n    let url = \"http://localhost:3000/categories\";\n    debugger;\n    return fetch(url).then(response => response.json()).then(result => dispatch(getCategoriesSuccess(result)));\n  };\n}","map":{"version":3,"sources":["C:/reactcourse/nortwind-redux-master2/src/redux/actions/categoryActions.js"],"names":["actionTypes","changeCategory","category","type","CHANGE_CATEGORY","payload","getCategoriesSuccess","categories","GET_CATEGORIES_SUCCESS","getCategories","dispatch","url","fetch","then","response","json","result"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AACrC,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI,eADf;AAEHC,IAAAA,OAAO,EAAEH;AAFN,GAAP;AAIH;AAED,OAAO,SAASI,oBAAT,CAA8BC,UAA9B,EACP;AACI,SAAO;AACHJ,IAAAA,IAAI,EAAEH,WAAW,CAACQ,sBADf;AAEHH,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH;AAGD,OAAO,SAASE,aAAT,GAAyB;AAC5B,SAAO,UAAUC,QAAV,EAAoB;AACvB,QAAIC,GAAG,GAAG,kCAAV;AACA;AACA,WAAOC,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,MAAM,IAAIN,QAAQ,CAACJ,oBAAoB,CAACU,MAAD,CAArB,CAFxB,CAAP;AAGH,GAND;AAOH","sourcesContent":["import * as actionTypes from \"./actionTypes\"\n\nexport function changeCategory(category) {\n    return {\n        type: actionTypes.CHANGE_CATEGORY,\n        payload: category\n    }\n}\n\nexport function getCategoriesSuccess(categories)\n{\n    return {\n        type: actionTypes.GET_CATEGORIES_SUCCESS,\n        payload: categories\n    }\n}\n\n\nexport function getCategories() {\n    return function (dispatch) {\n        let url = \"http://localhost:3000/categories\";\n        debugger;\n        return fetch(url)\n               .then(response => response.json())\n               .then(result => dispatch(getCategoriesSuccess(result)))\n    }\n}"]},"metadata":{},"sourceType":"module"}