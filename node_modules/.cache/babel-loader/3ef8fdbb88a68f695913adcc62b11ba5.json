{"ast":null,"code":"import _classCallCheck from\"C:/reactcourse/nortwind-redux-master2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/reactcourse/nortwind-redux-master2/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/reactcourse/nortwind-redux-master2/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/reactcourse/nortwind-redux-master2/node_modules/@babel/runtime/helpers/esm/createSuper\";import{connect}from\"react-redux\";import{Button,Table}from\"reactstrap\";import{bindActionCreators}from\"redux\";import React,{Component}from'react';import*as cartAction from\"../../redux/actions/cartActions\";import alertify from\"alertifyjs\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CartDetails=/*#__PURE__*/function(_Component){_inherits(CartDetails,_Component);var _super=_createSuper(CartDetails);function CartDetails(){var _this;_classCallCheck(this,CartDetails);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.OnDeleteCart=function(product){_this.props.actions.removeFromCard(product);alertify.error(product.productName+\" sepetden silindi\");};return _this;}_createClass(CartDetails,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Product Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Unit Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Quantity\"}),/*#__PURE__*/_jsx(\"th\",{})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:this.props.cart.map(function(cartitem){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"row\",children:cartitem.product.productName}),/*#__PURE__*/_jsx(\"td\",{children:cartitem.product.unitPrice}),/*#__PURE__*/_jsx(\"td\",{children:cartitem.quantity}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Button,{color:\"danger\",onClick:function onClick(){return _this2.OnDeleteCart(cartitem.product);},children:\"X\"})})]},cartitem.product.id);})})]})});}}]);return CartDetails;}(Component);function mapStateToProps(state){return{cart:state.cartReducer};}//operasyonları redux almak için\nfunction mapDispacthToProps(dispatch){return{actions:{removeFromCard:bindActionCreators(cartAction.removeFromCart,dispatch)}};}export default connect(mapStateToProps,mapDispacthToProps)(CartDetails);","map":{"version":3,"sources":["C:/reactcourse/nortwind-redux-master2/src/components/card/cartDetails.js"],"names":["connect","Button","Table","bindActionCreators","React","Component","cartAction","alertify","CartDetails","OnDeleteCart","product","props","actions","removeFromCard","error","productName","cart","map","cartitem","unitPrice","quantity","id","mapStateToProps","state","cartReducer","mapDispacthToProps","dispatch","removeFromCart"],"mappings":"gdAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,YAA9B,CACA,OAASC,kBAAT,KAAmC,OAAnC,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,GAAKC,CAAAA,UAAZ,KAA4B,iCAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,2FAGMC,CAAAA,W,+UAEFC,Y,CAAgB,SAACC,OAAD,CAAa,CAEzB,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,cAAnB,CAAkCH,OAAlC,EACAH,QAAQ,CAACO,KAAT,CAAeJ,OAAO,CAACK,WAAR,CAAoB,mBAAnC,EACH,C,6DAGD,iBAAS,iBACL,mBAAO,kCACH,MAAC,KAAD,yBACI,oCACI,mCACI,yBADJ,cAEI,oCAFJ,cAGI,kCAHJ,cAII,gCAJJ,cAKI,aALJ,GADJ,EADJ,cAUI,uBAEQ,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,GAAhB,CAAoB,SAAAC,QAAQ,qBAExB,mCACI,WAAI,KAAK,CAAC,KAAV,UAAiBA,QAAQ,CAACR,OAAT,CAAiBK,WAAlC,EADJ,cAEI,oBAAKG,QAAQ,CAACR,OAAT,CAAiBS,SAAtB,EAFJ,cAGI,oBAAKD,QAAQ,CAACE,QAAd,EAHJ,cAII,iCAAI,KAAC,MAAD,EAAQ,KAAK,CAAC,QAAd,CAAuB,OAAO,CAAE,yBAAI,CAAA,MAAI,CAACX,YAAL,CAAkBS,QAAQ,CAACR,OAA3B,CAAJ,EAAhC,eAAJ,EAJJ,GAASQ,QAAQ,CAACR,OAAT,CAAiBW,EAA1B,CAFwB,EAA5B,CAFR,EAVJ,GADG,EAAP,CA2BH,C,yBArCqBhB,S,EAwC1B,QAASiB,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5B,MAAO,CACHP,IAAI,CAAEO,KAAK,CAACC,WADT,CAAP,CAGH,CAED;AACA,QAASC,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CAClC,MAAO,CACHd,OAAO,CAAE,CACLC,cAAc,CAAEV,kBAAkB,CAACG,UAAU,CAACqB,cAAZ,CAA4BD,QAA5B,CAD7B,CADN,CAAP,CAKH,CACD,cAAe1B,CAAAA,OAAO,CAACsB,eAAD,CAAkBG,kBAAlB,CAAP,CAA6CjB,WAA7C,CAAf","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { Button, Table } from \"reactstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport React, { Component } from 'react';\r\nimport * as cartAction from \"../../redux/actions/cartActions\";\r\nimport alertify from \"alertifyjs\";\r\n\r\n\r\nclass CartDetails extends Component {\r\n    \r\n    OnDeleteCart =  (product) => {\r\n\r\n        this.props.actions.removeFromCard(product);\r\n        alertify.error(product.productName+\" sepetden silindi\");\r\n    }\r\n    \r\n\r\n    render() {\r\n        return <div>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Product Name</th>\r\n                        <th>Unit Price</th>\r\n                        <th>Quantity</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        this.props.cart.map(cartitem => (\r\n\r\n                            <tr key={cartitem.product.id}>\r\n                                <th scope=\"row\">{cartitem.product.productName}</th>\r\n                                <td>{cartitem.product.unitPrice}</td>\r\n                                <td>{cartitem.quantity}</td>\r\n                                <td><Button color=\"danger\" onClick={()=>this.OnDeleteCart(cartitem.product)} >X</Button></td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n\r\n                </tbody>\r\n            </Table>\r\n        </div>;\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        cart: state.cartReducer\r\n    }\r\n}\r\n\r\n//operasyonları redux almak için\r\nfunction mapDispacthToProps(dispatch) {\r\n    return {\r\n        actions: {\r\n            removeFromCard: bindActionCreators(cartAction.removeFromCart, dispatch)\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispacthToProps)(CartDetails)"]},"metadata":{},"sourceType":"module"}