{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axiosInstance from \"./axiosConfig\";\nexport function getProductsSuccess(produts) {\n  return {\n    type: actionTypes.GET_PRODUCTS_SUCCESS,\n    payload: produts\n  };\n}\nexport function getProducts(categoryid) {\n  return function (dispatch) {\n    let url = \"/products\";\n\n    if (categoryid) {\n      url = url + \"?categoryId=\" + categoryid;\n    }\n\n    return axiosInstance.get(url).then(function (response) {\n      dispatch(getProductsSuccess(response.data));\n    });\n    /*        return fetch(url)\r\n                   .then(response => response.json())\r\n                   .then(result => dispatch(getProductsSuccess(result)))*/\n  };\n}\nexport function createProductSuccess(product) {\n  return {\n    type: actionTypes.CREATE_PRODUCT_SUCCESS,\n    payload: product\n  };\n}\nexport function updateProductSuccess(product) {\n  return {\n    type: actionTypes.UPDATE_PRODUCT_SUCCESS,\n    payload: product\n  };\n}\nexport function saveProductApi(product) {\n  return axiosInstance({\n    method: products.id ? \"PUT\" : \"POST\",\n    url: \"/categories/\" + (products.id || \"\"),\n    data: products,\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).then(handleresponse).catch(handleError);\n  /*\r\n  return fetch(\"http://localhost:3000/products/\" + (product.id || \"\"),{\r\n      method:product.id ? \"PUT\":\"POST\",\r\n      headers:{\"content-type\":\"application/json\"},\r\n      body: JSON.stringify(product)\r\n  }).then(handleresponse)\r\n    .catch(handleError)\r\n  */\n}\nexport function saveProduct(product) {\n  return function (dispatch) {\n    return saveProductApi(product).then(savedProduct => {\n      product.id ? dispatch(updateProductSuccess(savedProduct)) : dispatch(createProductSuccess(savedProduct));\n    });\n  };\n}\nexport async function handleresponse(response) {\n  if (response.ok) {\n    return response.json();\n  }\n\n  const error = await response.text();\n  throw new Error(error);\n}\nexport function handleError(error) {\n  console.error(\"Bir Hata Oluştu\" + error.text());\n  throw error;\n}\nexport async function handleResponseRemoved(response) {\n  if (response.ok) {\n    return true;\n  }\n\n  const error = await response.text();\n  throw new Error(error);\n}\nexport function deleteProductApi(product) {\n  return fetch(\"http://localhost:3000/products/\" + product.id, {\n    method: \"DELETE\",\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).then(handleResponseRemoved).catch(handleError);\n}\nexport function deleteProductSuccess(product) {\n  return {\n    type: actionTypes.REMOVE_PRODUCT_SUCCESS,\n    payload: product\n  };\n}\nexport function deleteProduct(product) {\n  return function (dispatch) {\n    return deleteProductApi(product).then(result => dispatch(deleteProductSuccess(result)));\n  };\n}","map":{"version":3,"sources":["C:/reactcourse/nortwind-redux-master2/src/redux/actions/productAction.js"],"names":["actionTypes","axiosInstance","getProductsSuccess","produts","type","GET_PRODUCTS_SUCCESS","payload","getProducts","categoryid","dispatch","url","get","then","response","data","createProductSuccess","product","CREATE_PRODUCT_SUCCESS","updateProductSuccess","UPDATE_PRODUCT_SUCCESS","saveProductApi","method","products","id","headers","handleresponse","catch","handleError","saveProduct","savedProduct","ok","json","error","text","Error","console","handleResponseRemoved","deleteProductApi","fetch","deleteProductSuccess","REMOVE_PRODUCT_SUCCESS","deleteProduct","result"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionTypes\"\r\nimport axiosInstance from \"./axiosConfig\"\r\n\r\n\r\nexport function getProductsSuccess(produts)\r\n{\r\n    return {\r\n        type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n        payload: produts\r\n    }\r\n}\r\n\r\n\r\nexport function getProducts(categoryid) {\r\n    return function (dispatch) {\r\n        let url = \"/products\";\r\n        if(categoryid)\r\n        {\r\n            url = url +\"?categoryId=\"+categoryid;\r\n        }\r\n\r\n        return axiosInstance.get(url).then(function(response){\r\n            dispatch(getProductsSuccess(response.data))\r\n        })\r\n\r\n/*        return fetch(url)\r\n               .then(response => response.json())\r\n               .then(result => dispatch(getProductsSuccess(result)))*/\r\n    }\r\n}\r\n\r\n\r\nexport function createProductSuccess(product)\r\n{\r\n    return {type:actionTypes.CREATE_PRODUCT_SUCCESS,payload: product}\r\n}\r\n\r\nexport function updateProductSuccess(product)\r\n{\r\n    return {type:actionTypes.UPDATE_PRODUCT_SUCCESS,payload: product}\r\n}\r\n\r\nexport function saveProductApi(product)\r\n{\r\n    return axiosInstance({\r\n        method:products.id ? \"PUT\":\"POST\",\r\n        url:\"/categories/\" + (products.id || \"\"),\r\n        data: products,\r\n        headers:{\"content-type\":\"application/json\"}\r\n    }).then(handleresponse)\r\n    .catch(handleError)\r\n\r\n    /*\r\n    return fetch(\"http://localhost:3000/products/\" + (product.id || \"\"),{\r\n        method:product.id ? \"PUT\":\"POST\",\r\n        headers:{\"content-type\":\"application/json\"},\r\n        body: JSON.stringify(product)\r\n    }).then(handleresponse)\r\n      .catch(handleError)\r\n    */\r\n}\r\n\r\nexport function saveProduct(product)\r\n{\r\n    return function(dispatch) {\r\n        return saveProductApi(product).then(savedProduct=>{\r\n            product.id ? dispatch(updateProductSuccess(savedProduct)) : \r\n                         dispatch(createProductSuccess(savedProduct))\r\n        })\r\n    }\r\n}\r\n\r\nexport async function handleresponse(response)\r\n{\r\n    if(response.ok)\r\n    {\r\n        return response.json();\r\n    }\r\n\r\n    const error =  await response.text();\r\n    throw new Error(error);\r\n}\r\n\r\nexport function handleError(error)\r\n{\r\n    console.error(\"Bir Hata Oluştu\"+ error.text());\r\n    throw error;\r\n}\r\n\r\nexport async function handleResponseRemoved(response)\r\n{\r\n    if(response.ok)\r\n    {\r\n        return true;\r\n    }\r\n\r\n    const error =  await response.text();\r\n    throw new Error(error);\r\n}\r\n\r\nexport function deleteProductApi(product)\r\n{\r\n    return fetch(\"http://localhost:3000/products/\" + (product.id ),{\r\n        method: \"DELETE\",\r\n        headers:{\"content-type\":\"application/json\"}\r\n    }).then(handleResponseRemoved)\r\n      .catch(handleError)\r\n}\r\n\r\nexport  function deleteProductSuccess(product)\r\n{\r\n    return {type:actionTypes.REMOVE_PRODUCT_SUCCESS,payload: product}\r\n}\r\n\r\n\r\nexport function deleteProduct(product)\r\n{\r\n    return function(dispatch) {\r\n        return deleteProductApi(product).then(result =>  dispatch(deleteProductSuccess(result)))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}