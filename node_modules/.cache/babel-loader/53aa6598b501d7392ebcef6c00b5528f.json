{"ast":null,"code":"//import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport axiosInstance from \"./axiosConfig\";\nexport function changeCategory(category) {\n  return {\n    type: actionTypes.CHANGE_CATEGORY,\n    payload: category\n  };\n}\nexport function getCategoriesSuccess(categories) {\n  return {\n    type: actionTypes.GET_CATEGORIES_SUCCESS,\n    payload: categories\n  };\n}\nexport function getCategories() {\n  return function (dispatch) {\n    let url = \"/categories\";\n    return axiosInstance.get(url).then(function (response) {\n      dispatch(getCategoriesSuccess(response.data));\n    }).catch(handleError); //     return fetch(url)\n    //            .then(response => response.json())\n    //            .then(result => dispatch(getCategoriesSuccess(result)))\n  };\n}\nexport function createCategorySuccess(product) {\n  return {\n    type: actionTypes.CREATE_CATEGORIES_SUCCESS,\n    payload: product\n  };\n}\nexport function updateCategorySuccess(product) {\n  return {\n    type: actionTypes.UPDATE_CATEGORIES_SUCCESS,\n    payload: product\n  };\n}\nexport function saveCategoryApi(category) {\n  return axios({\n    method: category.id ? \"PUT\" : \"POST\",\n    url: \"http://localhost:3000/categories/\" + (category.id || \"\"),\n    data: category,\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).then(function (result) {\n    debugger;\n    handleresponse(result, false);\n  }).catch(handleError);\n  /*  return fetch(\"http://localhost:3000/categories/\" + (category.id || \"\"),{\r\n        method:category.id ? \"PUT\":\"POST\",\r\n        headers:{\"content-type\":\"application/json\"},\r\n        body: JSON.stringify(category)\r\n    }).then(result => handleresponse(result,false))\r\n      .catch(handleError)*/\n}\nexport function saveCategory(category) {\n  return function (dispatch) {\n    return saveCategoryApi(category).then(savedCategory => {\n      category.id ? dispatch(updateCategorySuccess(savedCategory)) : dispatch(createCategorySuccess(savedCategory));\n    });\n  };\n}\nexport async function handleresponse(response, isDelete) {\n  if (response.status == 201 || response.status == 200) {\n    return isDelete ? true : response.data;\n  }\n\n  const error = await response.text();\n  throw new Error(error);\n}\nexport function handleError(error) {\n  console.error(\"Bir Hata Oluştu\" + error.text());\n  throw error;\n}\nexport function deleteCategoryApi(category) {\n  return axios.delete(\"http://localhost:3000/categories/\" + category.id, {\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).then(function (response) {\n    console.log(response);\n    handleresponse(response, true);\n  }).catch(handleError);\n  /*\r\n      return fetch(\"http://localhost:3000/categories/\" + (category.id ),{\r\n          method: \"DELETE\",\r\n          headers:{\"content-type\":\"application/json\"}\r\n      }).then(result => handleresponse(result,true))\r\n        .catch(handleError) */\n}\nexport function deleteCategorySuccess(state) {\n  return {\n    type: actionTypes.REMOVE_CATEGORIES_SUCCESS,\n    payload: state\n  };\n}\nexport function deleteCategory(category) {\n  return function (dispatch) {\n    return deleteCategoryApi(category).then(result => dispatch(deleteCategorySuccess(result)));\n  };\n}","map":{"version":3,"sources":["C:/reactcourse/nortwind-redux-master2/src/redux/actions/categoryActions.js"],"names":["actionTypes","axiosInstance","changeCategory","category","type","CHANGE_CATEGORY","payload","getCategoriesSuccess","categories","GET_CATEGORIES_SUCCESS","getCategories","dispatch","url","get","then","response","data","catch","handleError","createCategorySuccess","product","CREATE_CATEGORIES_SUCCESS","updateCategorySuccess","UPDATE_CATEGORIES_SUCCESS","saveCategoryApi","axios","method","id","headers","result","handleresponse","saveCategory","savedCategory","isDelete","status","error","text","Error","console","deleteCategoryApi","delete","log","deleteCategorySuccess","state","REMOVE_CATEGORIES_SUCCESS","deleteCategory"],"mappings":"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","sourcesContent":["//import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\"\r\nimport axiosInstance from \"./axiosConfig\"\r\n\r\nexport function changeCategory(category) {\r\n    return {\r\n        type: actionTypes.CHANGE_CATEGORY,\r\n        payload: category\r\n    }\r\n}\r\n\r\nexport function getCategoriesSuccess(categories)\r\n{\r\n    return {\r\n        type: actionTypes.GET_CATEGORIES_SUCCESS,\r\n        payload: categories\r\n    }\r\n}\r\n\r\n\r\nexport function getCategories() {\r\n    return function (dispatch) {\r\n        let url = \"/categories\";\r\n     \r\n        return axiosInstance.get(url).then(function(response){\r\n            dispatch(getCategoriesSuccess(response.data))\r\n        }).catch(handleError);\r\n\r\n   //     return fetch(url)\r\n   //            .then(response => response.json())\r\n   //            .then(result => dispatch(getCategoriesSuccess(result)))\r\n    }\r\n}\r\n\r\nexport function createCategorySuccess(product)\r\n{\r\n    return {type:actionTypes.CREATE_CATEGORIES_SUCCESS,payload: product}\r\n}\r\n\r\nexport function updateCategorySuccess(product)\r\n{\r\n    return {type:actionTypes.UPDATE_CATEGORIES_SUCCESS,payload: product}\r\n}\r\n\r\n\r\nexport function saveCategoryApi(category)\r\n{\r\n    return axios({\r\n        method:category.id ? \"PUT\":\"POST\",\r\n        url:\"http://localhost:3000/categories/\" + (category.id || \"\"),\r\n        data: category,\r\n        headers:{\"content-type\":\"application/json\"}\r\n    }).then(function(result){\r\n        debugger;\r\n        handleresponse(result,false);\r\n    }).catch(handleError);\r\n    \r\n  /*  return fetch(\"http://localhost:3000/categories/\" + (category.id || \"\"),{\r\n        method:category.id ? \"PUT\":\"POST\",\r\n        headers:{\"content-type\":\"application/json\"},\r\n        body: JSON.stringify(category)\r\n    }).then(result => handleresponse(result,false))\r\n      .catch(handleError)*/\r\n}\r\n\r\nexport function saveCategory(category)\r\n{\r\n    return function(dispatch) {\r\n        return saveCategoryApi(category).then(savedCategory=>{\r\n            category.id ? dispatch(updateCategorySuccess(savedCategory)) : \r\n                          dispatch(createCategorySuccess(savedCategory))\r\n        })\r\n    }\r\n}\r\n\r\nexport async function handleresponse(response,isDelete)\r\n{\r\n    if(response.status == 201 || response.status == 200)\r\n    {\r\n        return isDelete ? true : response.data;\r\n    }\r\n\r\n    const error =  await response.text();\r\n    throw new Error(error);\r\n}\r\n\r\nexport function handleError(error)\r\n{\r\n    console.error(\"Bir Hata Oluştu\"+ error.text());\r\n    throw error;\r\n}\r\n\r\nexport function deleteCategoryApi(category)\r\n{\r\n\r\n    return axios.delete(\"http://localhost:3000/categories/\" + (category.id ),{\r\n        headers:{\"content-type\":\"application/json\"}\r\n    }).then(function(response){\r\n        console.log(response);\r\n\r\n        handleresponse(response,true);\r\n    }).catch(handleError);\r\n\r\n/*\r\n    return fetch(\"http://localhost:3000/categories/\" + (category.id ),{\r\n        method: \"DELETE\",\r\n        headers:{\"content-type\":\"application/json\"}\r\n    }).then(result => handleresponse(result,true))\r\n      .catch(handleError) */\r\n}\r\n\r\nexport function deleteCategorySuccess(state)\r\n{\r\n    return {type:actionTypes.REMOVE_CATEGORIES_SUCCESS,payload: state}\r\n}\r\n\r\nexport function deleteCategory(category)\r\n{\r\n    return function(dispatch) {\r\n        return deleteCategoryApi(category).then(result => dispatch(deleteCategorySuccess(result)))   \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}